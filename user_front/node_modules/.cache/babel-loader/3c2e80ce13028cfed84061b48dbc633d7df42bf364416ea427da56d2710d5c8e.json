{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamil\\\\OneDrive\\\\Pulpit\\\\mailbox\\\\Mailer\\\\Mailer\\\\user_front\\\\src\\\\components\\\\NewMessage\\\\NewMessage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./NewMessage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewMessage = ({\n  userId\n}) => {\n  _s();\n  const [selectedRecipient, setSelectedRecipient] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const [usersList, setUsersList] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [availableRecipients, setAvailableRecipients] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    const sessionToken = sessionStorage.getItem(\"token\");\n    setToken(sessionToken);\n  }, []);\n  useEffect(() => {\n    if (token) {\n      const fetchUsersList = async () => {\n        try {\n          const response = await axios.get(\"/api/users\", {\n            params: {\n              token\n            }\n          });\n          if (response.data.users) {\n            setUsersList(response.data.users);\n            setAvailableRecipients(response.data.users.map(user => user.email));\n          } else {\n            setUsersList([]);\n            setAvailableRecipients([]);\n          }\n          console.log(response);\n        } catch (err) {\n          setError(\"Błąd podczas pobierania listy użytkowników\");\n          console.error(err.response ? err.response.data : err.message);\n        }\n      };\n      fetchUsersList();\n    }\n  }, [token, setError]);\n  useEffect(() => {\n    if (usersList) {\n      setFilteredUsers(usersList.filter(user => user.username.toLowerCase().includes(selectedRecipient.toLowerCase())));\n    }\n  }, [selectedRecipient, usersList]);\n  const handleSendMessage = async () => {\n    try {\n      const recipient = filteredUsers.find(user => user.email === selectedRecipient);\n      if (!recipient) {\n        setError(\"Nieprawidłowy odbiorca\");\n        return;\n      }\n      const response = await axios.post(\"/api/messages\", {\n        token: token,\n        sender: userId,\n        receiver: recipient.email,\n        content\n      });\n      console.log(response.data);\n      setSuccessMessage(\"Wiadomość została wysłana pomyślnie.\");\n    } catch (err) {\n      setError(\"Błąd podczas wysyłania wiadomości\");\n      console.error(err.response ? err.response.data : err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-message-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"message-label\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        list: \"users\",\n        value: selectedRecipient,\n        onChange: e => setSelectedRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"users\",\n        children: availableRecipients.map(recipient => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: recipient\n        }, recipient, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"message-label\",\n      children: [\"Tre\\u015B\\u0107:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send-btn\",\n      onClick: handleSendMessage,\n      children: \"Wy\\u015Blij\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(\"/dashboard\"),\n      children: \"Powr\\xF3t\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(NewMessage, \"ooez8PEvnVuWI3sA8URj46Vf0J8=\", false, function () {\n  return [useNavigate];\n});\n_c = NewMessage;\nexport default NewMessage;\nvar _c;\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","NewMessage","userId","_s","selectedRecipient","setSelectedRecipient","content","setContent","successMessage","setSuccessMessage","error","setError","usersList","setUsersList","filteredUsers","setFilteredUsers","availableRecipients","setAvailableRecipients","token","setToken","navigate","sessionToken","sessionStorage","getItem","fetchUsersList","response","get","params","data","users","map","user","email","console","log","err","message","filter","username","toLowerCase","includes","handleSendMessage","recipient","find","post","sender","receiver","className","children","type","list","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kamil/OneDrive/Pulpit/mailbox/Mailer/Mailer/user_front/src/components/NewMessage/NewMessage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./NewMessage.scss\";\r\n\r\nconst NewMessage = ({ userId }) => {\r\n  const [selectedRecipient, setSelectedRecipient] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [availableRecipients, setAvailableRecipients] = useState([]);\r\n  const [token, setToken] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const sessionToken = sessionStorage.getItem(\"token\");\r\n    setToken(sessionToken);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const fetchUsersList = async () => {\r\n        try {\r\n          const response = await axios.get(\"/api/users\", { params: { token } });\r\n\r\n          if (response.data.users) {\r\n            setUsersList(response.data.users);\r\n            setAvailableRecipients(\r\n              response.data.users.map((user) => user.email)\r\n            );\r\n          } else {\r\n            setUsersList([]);\r\n            setAvailableRecipients([]);\r\n          }\r\n\r\n          console.log(response);\r\n        } catch (err) {\r\n          setError(\"Błąd podczas pobierania listy użytkowników\");\r\n          console.error(err.response ? err.response.data : err.message);\r\n        }\r\n      };\r\n\r\n      fetchUsersList();\r\n    }\r\n  }, [token, setError]);\r\n\r\n  useEffect(() => {\r\n    if (usersList) {\r\n      setFilteredUsers(\r\n        usersList.filter((user) =>\r\n          user.username.toLowerCase().includes(selectedRecipient.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  }, [selectedRecipient, usersList]);\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      const recipient = filteredUsers.find(\r\n        (user) => user.email === selectedRecipient\r\n      );\r\n\r\n      if (!recipient) {\r\n        setError(\"Nieprawidłowy odbiorca\");\r\n        return;\r\n      }\r\n      const response = await axios.post(\"/api/messages\", {\r\n        token: token,\r\n        sender: userId,\r\n        receiver: recipient.email,\r\n        content,\r\n      });\r\n\r\n      console.log(response.data);\r\n\r\n      setSuccessMessage(\"Wiadomość została wysłana pomyślnie.\");\r\n    } catch (err) {\r\n      setError(\"Błąd podczas wysyłania wiadomości\");\r\n      console.error(err.response ? err.response.data : err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-message-container\">\r\n      <label className=\"message-label\">\r\n        <input\r\n          type=\"text\"\r\n          list=\"users\"\r\n          value={selectedRecipient}\r\n          onChange={(e) => setSelectedRecipient(e.target.value)}\r\n        />\r\n        <datalist id=\"users\">\r\n          {availableRecipients.map((recipient) => (\r\n            <option key={recipient} value={recipient} />\r\n          ))}\r\n        </datalist>\r\n      </label>\r\n      <label className=\"message-label\">\r\n        Treść:\r\n        <textarea\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button className=\"send-btn\" onClick={handleSendMessage}>\r\n        Wyślij\r\n      </button>\r\n      <button className=\"back-btn\" onClick={() => navigate(\"/dashboard\")}>\r\n        Powrót\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}