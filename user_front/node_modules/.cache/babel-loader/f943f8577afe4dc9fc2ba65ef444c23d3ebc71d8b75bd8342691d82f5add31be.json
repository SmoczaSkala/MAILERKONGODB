{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamil\\\\OneDrive\\\\Pulpit\\\\mailbox\\\\Mailer\\\\Mailer\\\\user_front\\\\src\\\\components\\\\NewMessage\\\\NewMessage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"./NewMessage.scss\";\n\n// const NewMessage = ({ userId }) => {\n//   const [recipient, setRecipient] = useState(\"\");\n//   const [content, setContent] = useState(\"\");\n//   const [successMessage, setSuccessMessage] = useState(null);\n//   const [error, setError] = useState(null);\n//   const [usersList, setUsersList] = useState([]);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchUsersList = async () => {\n//       try {\n//         const response = await axios.get(\"/api/user/login\");\n//         setUsersList(response.data.users);\n//       } catch (error) {\n//         setError(\"Błąd podczas pobierania listy użytkowników\");\n//         console.error(error.response ? error.response.data : error.message);\n//       }\n//     };\n\n//     fetchUsersList();\n//   }, []);\n\n//   const handleSendMessage = async () => {\n//     try {\n//       await axios.post(`/users/messages/send`, {\n//         sender: userId,\n//         recipient,\n//         content,\n//       });\n\n//       setSuccessMessage(\"Wiadomość została wysłana pomyślnie.\");\n//     } catch (error) {\n//       setError(\"Błąd podczas wysyłania wiadomości\");\n//       console.error(error.response ? error.response.data : error.message);\n//     }\n//   };\n\n//   return (\n//     <div className=\"new-message-container\">\n//       <h2>Nowa Wiadomość</h2>\n//       {error && <div className=\"error-msg\">{error}</div>}\n//       {successMessage && <div className=\"success-msg\">{successMessage}</div>}\n//       <label className=\"message-label\">\n//         Odbiorca:\n//         <input\n//           type=\"text\"\n//           list=\"users\"\n//           value={recipient}\n//           onChange={(e) => setRecipient(e.target.value)}\n//         />\n//         <datalist id=\"users\">\n//           {usersList &&\n//             usersList.map((user) => (\n//               <option key={user.id} value={user.username} />\n//             ))}\n//         </datalist>\n//       </label>\n//       <br />\n//       <label className=\"message-label\">\n//         Treść:\n//         <textarea\n//           value={content}\n//           onChange={(e) => setContent(e.target.value)}\n//         />\n//       </label>\n//       <br />\n//       <button className=\"send-btn\" onClick={handleSendMessage}>\n//         Wyślij\n//       </button>\n//       <button className=\"back-btn\" onClick={() => navigate(\"/dashboard\")}>\n//         Powrót\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default NewMessage;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./NewMessage.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewMessage = ({\n  userId\n}) => {\n  _s();\n  const [selectedRecipient, setSelectedRecipient] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const [usersList, setUsersList] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUsersList = async () => {\n      try {\n        const response = await axios.get(\"/api/user/login\");\n        setUsersList(response.data.users);\n      } catch (error) {\n        setError(\"Błąd podczas pobierania listy użytkowników\");\n        console.error(error.response ? error.response.data : error.message);\n      }\n    };\n    fetchUsersList();\n  }, []);\n  const handleSendMessage = async () => {\n    try {\n      await axios.post(`/users/messages/send`, {\n        sender: userId,\n        recipient: selectedRecipient,\n        content\n      });\n      setSuccessMessage(\"Wiadomość została wysłana pomyślnie.\");\n    } catch (error) {\n      setError(\"Błąd podczas wysyłania wiadomości\");\n      console.error(error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-message-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nowa Wiadomo\\u015B\\u0107\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-msg\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-msg\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"message-label\",\n      children: [\"Odbiorca:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        list: \"users\",\n        value: selectedRecipient,\n        onChange: e => setSelectedRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"users\",\n        children: usersList && usersList.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"message-label\",\n      children: [\"Tre\\u015B\\u0107:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send-btn\",\n      onClick: handleSendMessage,\n      children: \"Wy\\u015Blij\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-btn\",\n      onClick: () => navigate(\"/dashboard\"),\n      children: \"Powr\\xF3t\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(NewMessage, \"FPQpbl/iyIppNTSg1pPOhbN46i0=\", false, function () {\n  return [useNavigate];\n});\n_c = NewMessage;\nexport default NewMessage;\ns;\nvar _c;\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","NewMessage","userId","_s","selectedRecipient","setSelectedRecipient","content","setContent","successMessage","setSuccessMessage","error","setError","usersList","setUsersList","navigate","fetchUsersList","response","get","data","users","console","message","handleSendMessage","post","sender","recipient","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","list","value","onChange","e","target","id","map","user","username","onClick","_c","s","$RefreshReg$"],"sources":["C:/Users/kamil/OneDrive/Pulpit/mailbox/Mailer/Mailer/user_front/src/components/NewMessage/NewMessage.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import \"./NewMessage.scss\";\r\n\r\n// const NewMessage = ({ userId }) => {\r\n//   const [recipient, setRecipient] = useState(\"\");\r\n//   const [content, setContent] = useState(\"\");\r\n//   const [successMessage, setSuccessMessage] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n//   const [usersList, setUsersList] = useState([]);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsersList = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"/api/user/login\");\r\n//         setUsersList(response.data.users);\r\n//       } catch (error) {\r\n//         setError(\"Błąd podczas pobierania listy użytkowników\");\r\n//         console.error(error.response ? error.response.data : error.message);\r\n//       }\r\n//     };\r\n\r\n//     fetchUsersList();\r\n//   }, []);\r\n\r\n//   const handleSendMessage = async () => {\r\n//     try {\r\n//       await axios.post(`/users/messages/send`, {\r\n//         sender: userId,\r\n//         recipient,\r\n//         content,\r\n//       });\r\n\r\n//       setSuccessMessage(\"Wiadomość została wysłana pomyślnie.\");\r\n//     } catch (error) {\r\n//       setError(\"Błąd podczas wysyłania wiadomości\");\r\n//       console.error(error.response ? error.response.data : error.message);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"new-message-container\">\r\n//       <h2>Nowa Wiadomość</h2>\r\n//       {error && <div className=\"error-msg\">{error}</div>}\r\n//       {successMessage && <div className=\"success-msg\">{successMessage}</div>}\r\n//       <label className=\"message-label\">\r\n//         Odbiorca:\r\n//         <input\r\n//           type=\"text\"\r\n//           list=\"users\"\r\n//           value={recipient}\r\n//           onChange={(e) => setRecipient(e.target.value)}\r\n//         />\r\n//         <datalist id=\"users\">\r\n//           {usersList &&\r\n//             usersList.map((user) => (\r\n//               <option key={user.id} value={user.username} />\r\n//             ))}\r\n//         </datalist>\r\n//       </label>\r\n//       <br />\r\n//       <label className=\"message-label\">\r\n//         Treść:\r\n//         <textarea\r\n//           value={content}\r\n//           onChange={(e) => setContent(e.target.value)}\r\n//         />\r\n//       </label>\r\n//       <br />\r\n//       <button className=\"send-btn\" onClick={handleSendMessage}>\r\n//         Wyślij\r\n//       </button>\r\n//       <button className=\"back-btn\" onClick={() => navigate(\"/dashboard\")}>\r\n//         Powrót\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default NewMessage;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./NewMessage.scss\";\r\n\r\nconst NewMessage = ({ userId }) => {\r\n  const [selectedRecipient, setSelectedRecipient] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [usersList, setUsersList] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUsersList = async () => {\r\n      try {\r\n        const response = await axios.get(\"/api/user/login\");\r\n        setUsersList(response.data.users);\r\n      } catch (error) {\r\n        setError(\"Błąd podczas pobierania listy użytkowników\");\r\n        console.error(error.response ? error.response.data : error.message);\r\n      }\r\n    };\r\n\r\n    fetchUsersList();\r\n  }, []);\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      await axios.post(`/users/messages/send`, {\r\n        sender: userId,\r\n        recipient: selectedRecipient,\r\n        content,\r\n      });\r\n\r\n      setSuccessMessage(\"Wiadomość została wysłana pomyślnie.\");\r\n    } catch (error) {\r\n      setError(\"Błąd podczas wysyłania wiadomości\");\r\n      console.error(error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-message-container\">\r\n      <h2>Nowa Wiadomość</h2>\r\n      {error && <div className=\"error-msg\">{error}</div>}\r\n      {successMessage && <div className=\"success-msg\">{successMessage}</div>}\r\n      <label className=\"message-label\">\r\n        Odbiorca:\r\n        <input\r\n          type=\"text\"\r\n          list=\"users\"\r\n          value={selectedRecipient}\r\n          onChange={(e) => setSelectedRecipient(e.target.value)}\r\n        />\r\n        <datalist id=\"users\">\r\n          {usersList &&\r\n            usersList.map((user) => (\r\n              <option key={user.id} value={user.username} />\r\n            ))}\r\n        </datalist>\r\n      </label>\r\n      <br />\r\n      <label className=\"message-label\">\r\n        Treść:\r\n        <textarea\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button className=\"send-btn\" onClick={handleSendMessage}>\r\n        Wyślij\r\n      </button>\r\n      <button className=\"back-btn\" onClick={() => navigate(\"/dashboard\")}>\r\n        Powrót\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\ns;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}