{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateu\\\\Desktop\\\\Mailer\\\\user_front\\\\src\\\\components\\\\NewMessage\\\\NewMessage.jsx\",\n  _s = $RefreshSig$();\n// components/NewMessage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewMessage = ({\n  userId\n}) => {\n  _s();\n  const [recipient, setRecipient] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [usersList, setUsersList] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Pobierz listę użytkowników, którzy mogą być odbiorcami\n    // To może być zapytanie do API, z którego pobierasz dane użytkowników\n    // Poniżej przykładowe dane, możesz dostosować do swojej implementacji\n    const fetchUsersList = async () => {\n      try {\n        const response = await axios.get(\"/api/user/login\");\n        setUsersList(response.data.users);\n      } catch (error) {\n        console.error(\"Błąd podczas pobierania listy użytkowników:\", error.response.data);\n      }\n    };\n    fetchUsersList();\n  }, []);\n  const handleSendMessage = async () => {\n    try {\n      await axios.post(`/users/${userId}/messages/send`, {\n        sender: userId,\n        recipient,\n        content\n      });\n      setSuccessMessage(\"Wiadomość została wysłana pomyślnie.\");\n      setTimeout(() => {\n        navigate(\"/dashboard\");\n      }, 3000);\n    } catch (error) {\n      console.error(\"Błąd podczas wysyłania wiadomości:\", error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nowa Wiadomo\\u015B\\u0107\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"green\"\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Odbiorca:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        list: \"users\",\n        value: recipient,\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"users\",\n        children: usersList.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user.username\n        }, user.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Tre\\u015B\\u0107:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Wy\\u015Blij\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(NewMessage, \"R0H4Rv+z0xHSMacdxoSxpxq4XYE=\", false, function () {\n  return [useNavigate];\n});\n_c = NewMessage;\nexport default NewMessage;\nvar _c;\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","NewMessage","userId","_s","recipient","setRecipient","content","setContent","successMessage","setSuccessMessage","usersList","setUsersList","navigate","fetchUsersList","response","get","data","users","error","console","handleSendMessage","post","sender","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","list","value","onChange","e","target","id","map","user","username","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mateu/Desktop/Mailer/user_front/src/components/NewMessage/NewMessage.jsx"],"sourcesContent":["// components/NewMessage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst NewMessage = ({ userId }) => {\r\n  const [recipient, setRecipient] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const [usersList, setUsersList] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Pobierz listę użytkowników, którzy mogą być odbiorcami\r\n    // To może być zapytanie do API, z którego pobierasz dane użytkowników\r\n    // Poniżej przykładowe dane, możesz dostosować do swojej implementacji\r\n    const fetchUsersList = async () => {\r\n      try {\r\n        const response = await axios.get(\"/api/user/login\");\r\n        setUsersList(response.data.users);\r\n      } catch (error) {\r\n        console.error(\r\n          \"Błąd podczas pobierania listy użytkowników:\",\r\n          error.response.data\r\n        );\r\n      }\r\n    };\r\n\r\n    fetchUsersList();\r\n  }, []);\r\n\r\n  const handleSendMessage = async () => {\r\n    try {\r\n      await axios.post(`/users/${userId}/messages/send`, {\r\n        sender: userId,\r\n        recipient,\r\n        content,\r\n      });\r\n\r\n      setSuccessMessage(\"Wiadomość została wysłana pomyślnie.\");\r\n\r\n      setTimeout(() => {\r\n        navigate(\"/dashboard\");\r\n      }, 3000);\r\n    } catch (error) {\r\n      console.error(\"Błąd podczas wysyłania wiadomości:\", error.response.data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Nowa Wiadomość</h2>\r\n      {successMessage && <div style={{ color: \"green\" }}>{successMessage}</div>}\r\n      <label>\r\n        Odbiorca:\r\n        <input\r\n          type=\"text\"\r\n          list=\"users\"\r\n          value={recipient}\r\n          onChange={(e) => setRecipient(e.target.value)}\r\n        />\r\n        <datalist id=\"users\">\r\n          {usersList.map((user) => (\r\n            <option key={user.id} value={user.username} />\r\n          ))}\r\n        </datalist>\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Treść:\r\n        <textarea\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button onClick={handleSendMessage}>Wyślij</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}