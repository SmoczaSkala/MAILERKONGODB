{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import \"./Dashboard.scss\";\n// import { jwtDecode } from \"jwt-decode\";\n// import Messages from \"./../message/Message\";\n// import { Link, useParams, useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// const Dashboard = () => {\n//   const [userInfo, setUserInfo] = useState(null);\n//   const [receivedMessages, setReceivedMessages] = useState([]);\n//   const [sentMessages, setSentMessages] = useState([]);\n//   const navigate = useNavigate();\n//   const { userId } = useParams();\n\n//   useEffect(() => {\n//     const fetchMessages = async () => {\n//       try {\n//         const receivedResponse = await axios.get(\n//           `/users/messages/received?token=${sessionStorage.getItem(\"token\")}`\n//         );\n//         setReceivedMessages(receivedResponse.data.messages);\n\n//         const sentResponse = await axios.get(\n//           `/users/messages/sent?token=${sessionStorage.getItem(\"token\")}`\n//         );\n//         setSentMessages(sentResponse.data.messages);\n//       } catch (error) {\n//         console.error(\n//           \"Błąd podczas pobierania wiadomości:\",\n//           error.response.data\n//         );\n//       }\n//     };\n\n//     fetchMessages();\n//   }, [userId]);\n\n//   useEffect(() => {\n//     const token = sessionStorage.getItem(\"token\");\n\n//     if (token) {\n//       const decodedToken = jwtDecode(token);\n\n//       setUserInfo(decodedToken);\n//     }\n//   }, []);\n\n//   const handleLogout = () => {\n//     sessionStorage.removeItem(\"token\");\n//     navigate(\"/\");\n//   };\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       <div className=\"user-info\">\n//         {userInfo && (\n//           <p>\n//             Zalogowany użytkownik:{\" \"}\n//             {userInfo.admin ? \"Admin\" : \"Standardowy użytkownik\"}\n//           </p>\n//         )}\n//         <button onClick={handleLogout}>Wyloguj</button>{\" \"}\n//       </div>\n//       <div className=\"received-mess\">\n//         <h1>Odebrane</h1>\n//         <Messages userId={userId} messages={receivedMessages} />\n//         <div className=\"messages\"></div>\n//       </div>\n//       <div className=\"send-mess\">\n//         <Link to=\"/new-message\">Nowa Wiadomość</Link>\n//       </div>\n//       <div className=\"sent-mess\">\n//         <h1>Wysłane</h1>\n//         <Messages userId={userId} messages={sentMessages} />\n//         <div className=\"messages\"></div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/kamil/OneDrive/Pulpit/mailbox/Mailer/Mailer/user_front/src/components/dashboard/Dashboard.jsx"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import \"./Dashboard.scss\";\r\n// import { jwtDecode } from \"jwt-decode\";\r\n// import Messages from \"./../message/Message\";\r\n// import { Link, useParams, useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// const Dashboard = () => {\r\n//   const [userInfo, setUserInfo] = useState(null);\r\n//   const [receivedMessages, setReceivedMessages] = useState([]);\r\n//   const [sentMessages, setSentMessages] = useState([]);\r\n//   const navigate = useNavigate();\r\n//   const { userId } = useParams();\r\n\r\n//   useEffect(() => {\r\n//     const fetchMessages = async () => {\r\n//       try {\r\n//         const receivedResponse = await axios.get(\r\n//           `/users/messages/received?token=${sessionStorage.getItem(\"token\")}`\r\n//         );\r\n//         setReceivedMessages(receivedResponse.data.messages);\r\n\r\n//         const sentResponse = await axios.get(\r\n//           `/users/messages/sent?token=${sessionStorage.getItem(\"token\")}`\r\n//         );\r\n//         setSentMessages(sentResponse.data.messages);\r\n//       } catch (error) {\r\n//         console.error(\r\n//           \"Błąd podczas pobierania wiadomości:\",\r\n//           error.response.data\r\n//         );\r\n//       }\r\n//     };\r\n\r\n//     fetchMessages();\r\n//   }, [userId]);\r\n\r\n//   useEffect(() => {\r\n//     const token = sessionStorage.getItem(\"token\");\r\n\r\n//     if (token) {\r\n//       const decodedToken = jwtDecode(token);\r\n\r\n//       setUserInfo(decodedToken);\r\n//     }\r\n//   }, []);\r\n\r\n//   const handleLogout = () => {\r\n//     sessionStorage.removeItem(\"token\");\r\n//     navigate(\"/\");\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-container\">\r\n//       <div className=\"user-info\">\r\n//         {userInfo && (\r\n//           <p>\r\n//             Zalogowany użytkownik:{\" \"}\r\n//             {userInfo.admin ? \"Admin\" : \"Standardowy użytkownik\"}\r\n//           </p>\r\n//         )}\r\n//         <button onClick={handleLogout}>Wyloguj</button>{\" \"}\r\n//       </div>\r\n//       <div className=\"received-mess\">\r\n//         <h1>Odebrane</h1>\r\n//         <Messages userId={userId} messages={receivedMessages} />\r\n//         <div className=\"messages\"></div>\r\n//       </div>\r\n//       <div className=\"send-mess\">\r\n//         <Link to=\"/new-message\">Nowa Wiadomość</Link>\r\n//       </div>\r\n//       <div className=\"sent-mess\">\r\n//         <h1>Wysłane</h1>\r\n//         <Messages userId={userId} messages={sentMessages} />\r\n//         <div className=\"messages\"></div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}