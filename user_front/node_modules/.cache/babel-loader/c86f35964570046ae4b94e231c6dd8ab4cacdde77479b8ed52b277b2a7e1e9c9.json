{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kamil\\\\OneDrive\\\\Pulpit\\\\mailbox\\\\Mailer\\\\Mailer\\\\user_front\\\\src\\\\components\\\\dashboard\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport \"./Dashboard.scss\";\nimport { jwtDecode } from \"jwt-decode\";\nimport Messages from \"./../message/Message\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [userInfo, setUserInfo] = useState(null);\n  const [receivedMessages, setReceivedMessages] = useState([]);\n  const [sentMessages, setSentMessages] = useState([]);\n  const [isMounted, setIsMounted] = useState(true); // Dodaj tę zmienną referencyjną\n  const navigate = useNavigate();\n  const {\n    userId\n  } = useParams();\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const token = sessionStorage.getItem(\"token\");\n        if (token) {\n          const receivedResponse = await axios.get(`/users/messages/received`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (isMounted) {\n            // Sprawdź, czy komponent jest zamontowany przed ustawieniem stanu\n            setReceivedMessages(receivedResponse.data.messages);\n          }\n          const sentResponse = await axios.get(`/users/messages/send`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (isMounted) {\n            // Sprawdź, czy komponent jest zamontowany przed ustawieniem stanu\n            setSentMessages(sentResponse.data.messages);\n          }\n        }\n      } catch (error) {\n        console.error(\"Błąd podczas pobierania wiadomości:\", error.response.data);\n      }\n    };\n    fetchMessages();\n\n    // Ustawienie isMounted na false, gdy komponent zostanie odmontowany\n    return () => {\n      setIsMounted(false);\n    };\n  }, [userId, isMounted]); // Dodaj isMounted jako zależność efektu\n\n  useEffect(() => {\n    const token = sessionStorage.getItem(\"token\");\n    if (token) {\n      const decodedToken = jwtDecode(token);\n      if (isMounted) {\n        // Sprawdź, czy komponent jest zamontowany przed ustawieniem stanu\n        setUserInfo(decodedToken);\n      }\n    }\n  }, [isMounted]); // Dodaj isMounted jako zależność efektu\n\n  const handleLogout = () => {\n    sessionStorage.removeItem(\"token\");\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [userInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Zalogowany u\\u017Cytkownik:\", \" \", userInfo.admin ? \"Admin\" : \"Standardowy użytkownik\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), userInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Adres e-mail: \", userInfo.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Wyloguj\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"received-mess\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Odebrane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        userId: userId,\n        messages: receivedMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send-mess\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/newmessage\",\n        children: \"Nowa Wiadomo\\u015B\\u0107\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sent-mess\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wys\\u0142ane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Messages, {\n        userId: userId,\n        messages: sentMessages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"gSe0lRcOA2ms58B56db7B46DHlQ=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useState","useEffect","jwtDecode","Messages","Link","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Dashboard","_s","userInfo","setUserInfo","receivedMessages","setReceivedMessages","sentMessages","setSentMessages","isMounted","setIsMounted","navigate","userId","fetchMessages","token","sessionStorage","getItem","receivedResponse","get","headers","Authorization","data","messages","sentResponse","error","console","response","decodedToken","handleLogout","removeItem","className","children","admin","fileName","_jsxFileName","lineNumber","columnNumber","email","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/kamil/OneDrive/Pulpit/mailbox/Mailer/Mailer/user_front/src/components/dashboard/Dashboard.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"./Dashboard.scss\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport Messages from \"./../message/Message\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Dashboard = () => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n  const [sentMessages, setSentMessages] = useState([]);\r\n  const [isMounted, setIsMounted] = useState(true); // Dodaj tę zmienną referencyjną\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const token = sessionStorage.getItem(\"token\");\r\n\r\n        if (token) {\r\n          const receivedResponse = await axios.get(`/users/messages/received`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n\r\n          if (isMounted) {\r\n            // Sprawdź, czy komponent jest zamontowany przed ustawieniem stanu\r\n            setReceivedMessages(receivedResponse.data.messages);\r\n          }\r\n\r\n          const sentResponse = await axios.get(`/users/messages/send`, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          });\r\n\r\n          if (isMounted) {\r\n            // Sprawdź, czy komponent jest zamontowany przed ustawieniem stanu\r\n            setSentMessages(sentResponse.data.messages);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\r\n          \"Błąd podczas pobierania wiadomości:\",\r\n          error.response.data\r\n        );\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n    // Ustawienie isMounted na false, gdy komponent zostanie odmontowany\r\n    return () => {\r\n      setIsMounted(false);\r\n    };\r\n  }, [userId, isMounted]); // Dodaj isMounted jako zależność efektu\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem(\"token\");\r\n\r\n    if (token) {\r\n      const decodedToken = jwtDecode(token);\r\n      if (isMounted) {\r\n        // Sprawdź, czy komponent jest zamontowany przed ustawieniem stanu\r\n        setUserInfo(decodedToken);\r\n      }\r\n    }\r\n  }, [isMounted]); // Dodaj isMounted jako zależność efektu\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"user-info\">\r\n        {userInfo && (\r\n          <p>\r\n            Zalogowany użytkownik:{\" \"}\r\n            {userInfo.admin ? \"Admin\" : \"Standardowy użytkownik\"}\r\n          </p>\r\n        )}\r\n        {userInfo && <p>Adres e-mail: {userInfo.email}</p>}\r\n        <button onClick={handleLogout}>Wyloguj</button>\r\n      </div>\r\n      <div className=\"received-mess\">\r\n        <h1>Odebrane</h1>\r\n        <Messages userId={userId} messages={receivedMessages} />\r\n        <div className=\"messages\"></div>\r\n      </div>\r\n      <div className=\"send-mess\">\r\n        <Link to=\"/newmessage\">Nowa Wiadomość</Link>\r\n      </div>\r\n      <div className=\"sent-mess\">\r\n        <h1>Wysłane</h1>\r\n        <Messages userId={userId} messages={sentMessages} />\r\n        <div className=\"messages\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}